@import 'mixins';

.webaudio-starter {
	@import 'options-output';
	@import 'code-output';
	@import 'tip';
	.options-output {
		@grid-size: 32px;
		@node-width: 6;
		@node-color: #DDF;
		@inactive-color: #444;
		@close-color: #C44;
		@open-color: #4C4;
		@main-font-size: 14px;
		@detail-font-size: 12px;
		fieldset.option {
			/*
			figure {
				display: inline-block;
				vertical-align: text-top;
				margin: 0 -1px 0 0;
				padding: 0;
				canvas {
					border: 1px solid;
				}
			}
			figure:last-of-type {
				margin: 0;
			}
			*/
			& > .graph {
				position: relative;
				overflow: auto;
				height: @grid-size * 15;
				min-height: @grid-size * 2;
				font-size: @main-font-size;
				font-family: sans-serif;
				margin-left: -11px; // expand to fieldset border - can't mess with fieldset itself b/c plans of option comparison
				margin-right: -2px;
				border-top: groove 2px #DDD;
				resize: vertical;
				& > svg {
					display: block;
					position: absolute; // resize on .graph will stop working on Chrome when both position: absolute and height: 100% are set
				}
				& > .nodes {
					position: absolute;
					top: 0;
					left: 0;
					width: 100%; // this has to be set, otherwise $node.position() will return wrong coords
					//height: 100%; // this has to be commented out, otherwise resize on .graph will stop working on Chrome
					& > fieldset.node-option {
						position: absolute;
						width: @grid-size*@node-width;
						margin: 0;
						padding: 0;
						border: none;
						box-shadow: 0 0 3px 3px rgba(0,0,0,0.3);
						& > legend, & > .node-ports {
							height: @grid-size;
							line-height: @grid-size;
							background: @node-color;
							text-align: center;
						}
						& > legend {
							position: absolute;
							margin: 0;
							padding: 0;
							width: 100%;
							& > .number-mark {
								.visually-hidden();
							}
						}
						& > .node-head-controls {
							position: relative;
							height: @grid-size;
							button.delete {
								.cross-icon(@size,@color) {
									@s: unit(@size);
									@a: @s/8;
									@b: @s - @a;
									.svg(@s,@s,"<path d='M @{a} @{a} L @{b} @{b} M @{a} @{b} L @{b} @{a}' fill='none' stroke='@{color}' stroke-width='@{a}' />");
								}
								position: absolute;
								display: block;
								width: @grid-size/2;
								height: @grid-size/2;
								right: @grid-size/4;
								top: @grid-size/4;
								padding: 0;
								border: none;
								background-color: transparent;
								background-repeat: no-repeat;
								.cross-icon(@grid-size/2,@inactive-color);
								&:hover {
									.cross-icon(@grid-size/2,@close-color);
									&:active {
										background-position: 0 1px;
									}
								}
								& > span {
									.visually-hidden();
								}
							}
						}
						& > .node-ports {
							position: relative;
							margin: 0 @grid-size*3/4;
							font-size: @detail-font-size;
							.node-port {
								position: absolute;
								width: 50%;
								height: @grid-size;
								top: 0;
								&.node-port-in {
									left: 0;
									text-align: left;
									&::before, .node-port-hole {
										left: -@grid-size*3/4;
									}
								}
								&.node-port-out {
									right: 0;
									text-align: right;
									&::before, .node-port-hole {
										right: -@grid-size*3/4;
									}
								}
								&::before, .node-port-hole {
									position: absolute;
									width: @grid-size/2;
									height: @grid-size/2;
									top: 0;
									border: solid @grid-size/4 @node-color;
								}
								&::before {
									content: '';
								}
								&.node-port-closed::before {
									background: @node-color;
								}
								.node-port-hole {
									border-radius: @grid-size/2;
									box-shadow: inset 0 0 3px 3px rgba(0,0,0,0.3);
									&::before {
										content: '';
										position: absolute;
										width: @grid-size/2;
										height: @grid-size/2;
										top: -1px;
										left: -1px;
										border: solid 1px @inactive-color;
										border-radius: @grid-size/2;
									}
								}
								/* // tried color-coding like https://en.wikipedia.org/wiki/PC_System_Design_Guide
								&.node-port-in .node-port-hole {
									box-shadow: inset 0 0 3px 3px rgba(20%,30%,50%,0.3); //shade(#ADD8E6,50%);
								}
								&.node-port-out .node-port-hole {
									box-shadow: inset 0 0 3px 3px rgba(10%,50%,10%,0.3); //shade(#98FB98,50%);
								}
								*/
								.node-port-label {
									position: relative;
									height: @grid-size/2 - 1px;
									line-height: @grid-size/2 - 1px;
									border-bottom: solid 2px @inactive-color;
									& > span {
										.visually-hidden();
									}
								}
								&.node-port-in .node-port-label {
									padding-left: @grid-size/4;
									margin-right: @grid-size*3/8;
								}
								&.node-port-out .node-port-label {
									padding-right: @grid-size/4;
									margin-left: @grid-size*3/8;
								}
								.node-port-controls {
									.visually-hidden();
								}
							}
							.node-box {
								position: absolute;
								width: @grid-size*3/4;
								height: @grid-size*3/4;
								left: (@node-width - 3/2 - 3/4)*@grid-size/2;
								top: @grid-size/8;
								border: solid 2px @inactive-color;
								box-sizing: border-box;
								input {
									display: block;
									width: 100%;
									height: 100%;
									padding: 0;
									margin: 0;
								}
								label {
									.visually-hidden();
								}
							}
							// { webaudio-starter specific code
							.node-under-box-switch {
								position: absolute;
								width: (@node-width - 3/2 - 3/4)*@grid-size/2;
								left: (@node-width - 3/2 + 3/4)*@grid-size/2;
								height: 12px;
								line-height: 12px;
								top: @grid-size/2;
								text-align: left;
								input {
									padding: 0;
									margin: 0;
								}
							}
							// } webaudio-starter specific code
						}
						& > .node-fieldset-container {
							background: @node-color;
							& > fieldset.node-option {
								margin: 0 1px 1px 1px;
								padding: 0;
								border: solid 1px #888;
								& > legend {
									margin-left: 2px;
									height: @grid-size;
									line-height: @grid-size;
								}
								& > div.node-option {
									margin-left: -2px;
									margin-right: -2px;
									.node-option-section {
										background: none;
									}
								}
								& > div.node-option:last-child {
									margin-bottom: -2px;
								}
							}
						}
					}
				}
			}
		}
		div.node-option {
			@side-width: 1.5;
			@spacing-size: 4px;
			@more-button-size: 10px;
			font-size: @detail-font-size;
			.node-option-section {
				display: block;
				position: relative;
				height: @grid-size;
				line-height: @grid-size;
				background: @node-color;
				text-align: center;
			}
			input, button {
				display: block;
				position: absolute;
				box-sizing: border-box;
				font-size: @detail-font-size;
				&:invalid {
					background: #F8A;
				}
			}
			input[type="number"] {
				// http://stackoverflow.com/a/23374725
				-moz-appearance: textfield;
				&::-webkit-outer-spin-button, &::-webkit-inner-spin-button {
					-webkit-appearance: none;
					margin: 0;
				}
			}
			.node-option-section-text {
				label {
					display: block;
					position: absolute;
					height: @grid-size;
					width: @side-width*@grid-size - @spacing-size;
					text-align: right;
					& + span.space {
						display: none;
					}
				}
				input[type="text"] {
					height: @grid-size - 2*@spacing-size;
					width: (@node-width - @side-width)*@grid-size - @spacing-size;
					top: @spacing-size;
					left: @side-width*@grid-size;
				}
			}
			.node-option-section-number {
				.range-label, .units {
					height: 12px;
					line-height: 12px;
				}
				.range-label {
					display: block;
					position: absolute;
					width: (@node-width - @side-width)*@grid-size - @spacing-size;
					left: @spacing-size;
					text-align: justify;
					text-align-last: justify;
					label, .min, .max {
						display: inline-block;
					}
				}
				.units {
					display: block;
					position: absolute;
					width: @side-width*@grid-size - 2*@spacing-size;
					right: @spacing-size;
					text-align: left;
				}
				input[type="range"] {
					height: @grid-size / 2;
					top: @grid-size / 2 - 2px; // shift up slightly
					padding: 0;
					width: (@node-width - @side-width)*@grid-size - @spacing-size;
					left: @spacing-size;
					margin: 0;
				}
				input[type="number"] {
					height: @grid-size / 2;
					width: @side-width*@grid-size - 2*@spacing-size;
					right: @spacing-size;
					top: @grid-size / 2 - @spacing-size;
					padding-top: 0;
					padding-bottom: 0;
				}
				button.more, button.less {
					width: @more-button-size;
					height: @more-button-size;
					right: @spacing-size;
					top: 0;
					padding: 0;
					border: 0;
					background-color: transparent;
					background-repeat: no-repeat;
					&:hover:active {
						background-position: 0 1px;
					}
					& > span {
						.visually-hidden();
					}
				}
				button.more {
					.plus-icon(@size,@color) {
						@s: unit(@size);
						@h: @s/2;
						.svg(@s,@s,"<path d='M 0 @{h} H @{s} M @{h} 0 V @{s}' fill='none' stroke='@{color}' stroke-width='2' />");
					}
					.plus-icon(@more-button-size,@inactive-color);
					&:hover {
						.plus-icon(@more-button-size,@open-color);
					}
				}
				button.less {
					.minus-icon(@size,@color) {
						@s: unit(@size);
						@h: @s/2;
						.svg(@s,@s,"<path d='M 0 @{h} H @{s}' fill='none' stroke='@{color}' stroke-width='2' />");
					}
					.minus-icon(@more-button-size,@inactive-color);
					&:hover {
						.minus-icon(@more-button-size,@close-color);
					}
				}
			}
			.node-option-section-extra {
				button.reset {
					height: @grid-size - 2*@spacing-size;
					width: @side-width*@grid-size - 2*@spacing-size;
					right: @spacing-size;
					top: @spacing-size;
					padding: 0;
					line-height: @grid-size - 2*@spacing-size;
					border: outset 1px @inactive-color;
					&:hover:active {
						border: inset 1px @inactive-color;
					}
				}
				// { LiveNumber
				input[type="checkbox"] {
					height: @grid-size / 2;
					width: @grid-size / 2;
					top: @grid-size / 4;
					left: @grid-size / 4;
					line-height: @grid-size / 2;
					margin: 0;
				}
				.editable-top {
					display: block;
					position: absolute;
					top: 0;
					left: @grid-size;
					height: 12px;
					line-height: 12px;
					width: (@node-width - @side-width - 1)*@grid-size;
					text-align: left;
				}
				input[type="number"] {
					height: @grid-size / 2;
					width: 1.5*@grid-size;
					padding-top: 0;
					padding-bottom: 0;
					bottom: @spacing-size;
					&.min {
						left: @grid-size;
					}
					&.max {
						right: @side-width*@grid-size;
					}
				}
				.dots {
					display: block;
					position: absolute;
					height: @grid-size / 2;
					line-height: @grid-size / 2;
					width: (@node-width - @side-width - 4)*@grid-size;
					left: 2.5*@grid-size;
					bottom: @spacing-size;
				}
				// } LiveNumber
			}
		}
	}
}
